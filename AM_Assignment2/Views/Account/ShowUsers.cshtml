
@{
    ViewBag.Title = "List of users";
    AM_Assignment2.Helpers.GroupQuery groupQuery = new AM_Assignment2.Helpers.GroupQuery();
    AM_Assignment2.Helpers.UserQuery userQuery = new AM_Assignment2.Helpers.UserQuery();
}

<h2>List of users</h2>
@foreach (var item in ViewData["AllUsers"] as List<AM_Assignment2.Models.User>)
{
    IList<string> userRoleList = userQuery.GetRoleByUserID(@item.UserID);
    <ul>
        <li>User ID: @item.UserID</li>
        <li>Email: @userQuery.GetUserEmailByUserID(@item.UserID)</li>
        @for (int i = 0; i < userRoleList.Count; i++)
        {
            <li>Role: @userRoleList[i]</li>
        }
        <li>Creation date: @item.UserCreationDate.Date.ToLongDateString()</li>
        @if (@item.LastLoginTime.HasValue) // If user has logged in previously
        {
            <li>Last access: @item.LastLoginTime</li>
        }
        else // Else, user is a new account
        {
            <li>Last access: Never</li>
        }
        <li>Group: @groupQuery.GetGroupNameByID(@item.GroupID); @if (@item.GroupID.HasValue) { @Html.ActionLink("Change group", "ChangeGroup", new { userID = @item.UserID, groupID = @item.GroupID }) } else { @Html.ActionLink("Change group", "ChangeGroup", new { userID = @item.UserID, groupID = @item.GroupID })}</li>
        <li>@Html.ActionLink("Delete user", "DeleteUser", new { userID = @item.UserID, confirmed = false })</li>
    </ul><hr />
}
